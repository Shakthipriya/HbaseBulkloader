#!/usr/bin/env ruby

require 'rubygems'
require 'wukong'
require 'configliere' ; Configliere.use(:commandline, :env_var, :define)

Settings.define :table_name,       :required => true,                                  :description => "Hbase table to write data into"
Settings.define :column_family,                                                        :description => "HBase column family to write to, required for HFilesWriter"
Settings.define :key_field,                                                            :description => ""
Settings.define :hfiles,           :default => false
Settings.define :reduce_tasks,     :default => 10
Settings.define :hadoop_home,      :default => "/usr/lib/hadoop",                      :description => "Path to hadoop installation", :env_var => "HADOOP_HOME"
Settings.define :hbase_home,       :default => "/usr/lib/hbase",                       :description => "Path to hadoop installation", :env_var => "HBASE_HOME"
Settings.define :fields,           :default => "rsrc,user_id,scraped_at,screen_name,protected,followers_count,friends_count,statuses_count,favourites_count,created_at,sid,is_full,health"
Settings.resolve!


raise "No input file specified." if Settings.rest.first.blank?

class Wonderdog
  attr_accessor :options
  def initialize
    @options = Settings.dup
  end

  def execute
    system %Q{ echo #{hdp_cmd} }
    system %Q{ #{hdp_cmd} }
  end

  def hdp_cmd
    [
      "HADOOP_CLASSPATH=#{hadoop_classpath}",
      "#{options.hadoop_home}/bin/hadoop jar #{run_jar}",
      mainclass,
      "-Dmapred.map.tasks.speculative.execution=false",
      "-Dhbase.table.name=#{options.table_name}",
      "-Dhbase.column.family=#{options.column_family}",
      "-Dhbase.key.field=#{options.key_field}",
      "-Dhbase.field.names=#{options.fields}",
      "-Dmapred.reduce.tasks=#{options.reduce_tasks}",
      "#{options.rest.first}",
      "#{options.rest.last}"
    ].flatten.compact.join(" \t\\\n  ")
  end

  def mainclass
    return "org.apache.hadoop.hbase.mapreduce.DataChunkToHFiles" if options.hfiles
    "HbaseBulkloader"
  end

  def hadoop_classpath
    cp = ["."]
    Dir[
      "#{options.hbase_home}/hbase*.jar",
      "#{options.hbase_home}/lib/*.jar",
    ].each{|jar| cp << jar}
    cp.join(':')
  end

  def run_jar
    File.dirname(File.expand_path(__FILE__))+'/../build/hbase_bulkloader.jar'
  end

  def libjars
    libjars = []
    Dir[
      "#{options.hbase_home}/lib/*.jar"
    ].each{|jar| libjars << jar}
    libjars.join(',')
  end
end

runner = Wonderdog.new
runner.execute
